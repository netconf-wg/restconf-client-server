<?xml version='1.0'?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd">

<?rfc toc="yes"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes" ?>
<?rfc compact="yes"?>
<?rfc subcompact="no"?>
<?rfc linkmailto="no" ?>
<?rfc editing="no" ?>
<?rfc comments="yes" ?>
<?rfc inline="yes"?>
<?rfc rfcedstyle="yes"?>
<?rfc-ext allow-markup-in-artwork="yes" ?>
<?rfc-ext include-index="no" ?>
<!--<?rfc strict="no"?> -->

<rfc category="std"
     ipr="trust200902"
     docName="draft-ietf-netconf-restconf-client-server-latest" >
    <front>
        <title>RESTCONF Client and Server Models</title>
        <author initials="K." surname="Watsen" fullname="Kent Watsen">
            <organization>Watsen Networks</organization>
            <address>
                <email>kent+ietf@watsen.net</email>
            </address>
        </author>
        <date/>
        <area>Operations</area>
        <workgroup>NETCONF Working Group</workgroup>
        <abstract>
            <t>This document defines two YANG modules,
            one module to configure a RESTCONF client and the other module to
            configure a RESTCONF server.  Both modules support the TLS transport
            protocol with both standard RESTCONF and RESTCONF Call Home connections.</t>

        </abstract>
        <note title="Editorial Note (To be removed by RFC Editor)">
          <t>This draft contains many placeholder values that need to be replaced
          with finalized values at the time of publication.  This note summarizes
          all of the substitutions that are needed.  No other RFC Editor
          instructions are specified elsewhere in this document.</t>

          <t>This document contains references to other drafts in progress, both in
          the Normative References section, as well as in body text throughout.  
          Please update the following references to reflect their final RFC assignments:
            <list style="symbols">
              <t>I-D.ietf-netconf-keystore</t>
              <t>I-D.ietf-netconf-tcp-client-server</t>
              <t>I-D.ietf-netconf-tls-client-server</t>
              <t>I-D.ietf-netconf-http-client-server</t>
            </list>
          </t>
          <t>Artwork in this document contains shorthand references to drafts in 
          progress.  Please apply the following replacements:
            <list  style="symbols">
              <t><spanx style="verb">XXXX</spanx> --&gt; the assigned RFC value for this draft</t>
              <t><spanx style="verb">AAAA</spanx> --&gt; the assigned RFC value for I-D.ietf-netconf-tcp-client-server</t>
              <t><spanx style="verb">BBBB</spanx> --&gt; the assigned RFC value for I-D.ietf-netconf-tls-client-server</t>
              <t><spanx style="verb">CCCC</spanx> --&gt; the assigned RFC value for I-D.ietf-netconf-http-client-server</t>
            </list>
          </t>
          <t>Artwork in this document contains placeholder values for the date of publication of this
          draft.  Please apply the following replacement:
            <list  style="symbols">
              <t><spanx style="verb">YYYY-MM-DD</spanx> --&gt; the publication date of this draft</t>
            </list>
          </t>
          <t>The following Appendix section is to be removed prior to publication:
            <list  style="symbols">
              <t><xref target="change-log"/>.  Change Log</t>
            </list>
          </t>
        </note>
    </front> <middle>

        <section title="Introduction">

            <t>This document defines two YANG <xref target="RFC7950"/> modules,
            one module to configure a RESTCONF client and the other module to
            configure a RESTCONF server <xref target="RFC8040"/>.
            Both modules support the TLS <xref target="RFC8446"/> transport
            protocol with both standard RESTCONF and RESTCONF Call Home connections
            <xref target="RFC8071"/>.</t>

            <section title="Terminology">
             <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL
             NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED",
             "MAY", and "OPTIONAL" in this document are to be interpreted as
             described in BCP 14 <xref target="RFC2119"/> <xref target="RFC8174"/>
             when, and only when, they appear in all capitals, as shown here.</t>
            </section>
        </section>

        <section title="The RESTCONF Client Model">
        <t>The RESTCONF client model presented in this section supports
        both clients initiating connections to servers, as well as
        clients listening for connections from servers calling home.</t>

        <t>YANG feature statements are used to enable implementations to
        advertise which potentially uncommon parts of the model the
        RESTCONF client supports.</t>

        <section title="Tree Diagram" anchor="restconf-client-tree">
          <t>The following tree diagram <xref target="RFC8340"/> provides an
            overview of the data model for the "ietf-restconf-client" module.</t>
          <t>This tree diagram only shows the nodes defined in this module; it does
            show the nodes defined by "grouping" statements used by this module.</t>
          <t>Please see <xref target="restconf-client-tree-expanded"/> for a tree
            diagram that illustrates what the module looks like with all the
            "grouping" statements expanded.</t>
          <t>
            <figure>
              <artwork><![CDATA[
INSERT_TEXT_FROM_FILE(refs/ietf-restconf-client-tree-no-expand.txt)
]]></artwork>
            </figure>
          </t>
        </section>

        <section title="Example Usage">
          <t>The following example illustrates configuring a RESTCONF
          client to initiate connections, as well as listening for call-home
          connections.</t>
          <t>This example is consistent with the examples presented in
          Section 2 of <xref target="I-D.ietf-netconf-trust-anchors"/> 
          and Section 3.2 of <xref target="I-D.ietf-netconf-keystore"/>.</t>
          <t>
            <figure>
              <artwork><![CDATA[
INSERT_TEXT_FROM_FILE(refs/ex-restconf-client.xml)
]]></artwork>
            </figure>
          </t>
        </section>

        <section title="YANG Module" anchor="ietf-restconf-client-module">
          <t>This YANG module has normative references to <xref target="RFC6991"/>,
          <xref target="RFC8040"/>, and <xref target="RFC8071"/>,
          <xref target="I-D.kwatsen-netconf-tcp-client-server"/>,
          <xref target="I-D.ietf-netconf-tls-client-server"/>, and
          <xref target="I-D.kwatsen-netconf-http-client-server"/>.</t>
          <t>
            <figure>
              <artwork><![CDATA[
<CODE BEGINS> file "ietf-restconf-client@YYYY-MM-DD.yang"
INSERT_TEXT_FROM_FILE(ietf-restconf-client@YYYY-MM-DD.yang)
<CODE ENDS>
]]></artwork>
            </figure>
          </t>
        </section>
      </section>

      <section title="The RESTCONF Server Model">
        <t>The RESTCONF server model presented in this section supports
        both listening for connections as well as initiating call-home
        connections.</t>

        <t>YANG feature statements are used to enable implementations to
        advertise which potentially uncommon parts of the model the
        RESTCONF server supports.</t>

        <section title="Tree Diagram" anchor="restconf-server-tree">
          <t>The following tree diagram <xref target="RFC8340"/> provides an
            overview of the data model for the "ietf-restconf-server" module.</t>
          <t>This tree diagram only shows the nodes defined in this module; it does
            show the nodes defined by "grouping" statements used by this module.</t>
          <t>Please see <xref target="restconf-server-tree-expanded"/> for a tree
            diagram that illustrates what the module looks like with all the
            "grouping" statements expanded.</t>
          <t>
            <figure>
              <artwork><![CDATA[
INSERT_TEXT_FROM_FILE(refs/ietf-restconf-server-tree-no-expand.txt)
]]></artwork>
            </figure>
          </t>
        </section>

        <section title="Example Usage">
          <t>The following example illustrates configuring a RESTCONF server
          to listen for RESTCONF client connections, as well as configuring
          call-home to one RESTCONF client.</t>
          <t>This example is consistent with the examples presented in
          Section 2 of <xref target="I-D.ietf-netconf-trust-anchors"/> 
          and Section 3.2 of <xref target="I-D.ietf-netconf-keystore"/>.</t>
          <t>
            <figure>
              <artwork><![CDATA[
INSERT_TEXT_FROM_FILE(refs/ex-restconf-server.xml)
]]></artwork>
            </figure>
          </t>
        </section>

        <section title="YANG Module" anchor="ietf-restconf-server-module">
          <t>This YANG module has normative references to <xref target="RFC6991"/>,
          <xref target="RFC7407"/>, <xref target="RFC8040"/>, <xref target="RFC8071"/>,
          <xref target="I-D.kwatsen-netconf-tcp-client-server"/>,
          <xref target="I-D.ietf-netconf-tls-client-server"/>, and
          <xref target="I-D.kwatsen-netconf-http-client-server"/>.</t>
          <t>
            <figure>
              <artwork><![CDATA[
<CODE BEGINS> file "ietf-restconf-server@YYYY-MM-DD.yang"
INSERT_TEXT_FROM_FILE(ietf-restconf-server@YYYY-MM-DD.yang)
<CODE ENDS>
]]></artwork>
            </figure>
          </t>
        </section>
      </section>

      <section title="Security Considerations">
        <t>The YANG module defined in this document uses groupings defined in
          <xref target="I-D.kwatsen-netconf-tcp-client-server"/>,
          <xref target="I-D.ietf-netconf-tls-client-server"/>, and
          <xref target="I-D.kwatsen-netconf-http-client-server"/>.  Please
          see the Security Considerations section in those documents for
          concerns related those groupings.</t>

        <t>The YANG modules defined in this document are designed to be accessed
          via YANG based management protocols, such as NETCONF <xref target="RFC6241"/>
          and RESTCONF <xref target="RFC8040"/>.  Both of these protocols have
          mandatory-to-implement secure transport layers (e.g., SSH, TLS) with
          mutual authentication.</t>

        <t>The NETCONF access control model (NACM) <xref target="RFC8341"/>
          provides the means to restrict access for particular users to a
          pre-configured subset of all available protocol operations and content.</t>

        <t>There are a number of data nodes defined in the YANG modules that are
          writable/creatable/deletable (i.e., config true, which is the default). 
          Some of these data nodes may be considered sensitive or vulnerable in 
          some network environments.  Write operations (e.g., edit-config) to 
          these data nodes without proper protection can have a negative effect 
          on network operations. These are the subtrees and data nodes and their 
          sensitivity/vulnerability: 
          <list style="hanging" hangIndent="6">
            <t hangText="   None of the subtrees or data nodes in the modules defined in this document need to be protected from write operations."/>
          </list>
        </t>

        <t>Some of the readable data nodes in the YANG modules may be considered
          sensitive or vulnerable in some network environments. It is thus 
          important to control read access (e.g., via get, get-config, or 
          notification) to these data nodes. These are the subtrees and data 
          nodes and their sensitivity/vulnerability:
          <list style="hanging" hangIndent="6">
            <t hangText="   None of the subtrees or data nodes in the modules defined in this document need to be protected from read operations."/>
          </list>
        </t>

        <t>Some of the RPC operations in the YANG modules may be considered
          sensitive or vulnerable in some network environments. It is thus 
          important to control access to these operations. These are the 
          operations and their sensitivity/vulnerability:
          <list style="hanging" hangIndent="6">
            <t hangText="   The modules defined in this document do not define any 'RPC' or 'action' statements."/>
          </list>
        </t>
      </section>

      <section title="IANA Considerations">
        <section title="The IETF XML Registry">
          <t>This document registers two URIs in the "ns" subregistry of the IETF XML
          Registry <xref target="RFC3688"/>.  Following the format in
          <xref target="RFC3688"/>, the following registrations are
          requested:</t>
          <t>
            <figure>
                <artwork><![CDATA[
   URI: urn:ietf:params:xml:ns:yang:ietf-restconf-client
   Registrant Contact: The NETCONF WG of the IETF.
   XML: N/A, the requested URI is an XML namespace.

   URI: urn:ietf:params:xml:ns:yang:ietf-restconf-server
   Registrant Contact: The NETCONF WG of the IETF.
   XML: N/A, the requested URI is an XML namespace.
]]></artwork>
            </figure>
          </t>
        </section>

        <section title="The YANG Module Names Registry">
          <t>This document registers two YANG modules in the
          YANG Module Names registry <xref target="RFC6020"/>.
          Following the format in <xref target="RFC6020"/>, the
          the following registrations are requested:</t>
          <t>
            <figure>
                <artwork><![CDATA[
   name:         ietf-restconf-client
   namespace:    urn:ietf:params:xml:ns:yang:ietf-restconf-client
   prefix:       ncc
   reference:    RFC XXXX

   name:         ietf-restconf-server
   namespace:    urn:ietf:params:xml:ns:yang:ietf-restconf-server
   prefix:       ncs
   reference:    RFC XXXX
]]></artwork>
            </figure>
          </t>
        </section>
      </section>

  </middle>
  <back>

    <references title="Normative References">
      <?rfc include="reference.RFC.2119.xml"?>
      <?rfc include="reference.RFC.6020.xml"?>
      <?rfc include="reference.RFC.6991.xml"?>
      <?rfc include="reference.RFC.7407.xml"?>
      <?rfc include="reference.RFC.7950.xml"?>
      <?rfc include="reference.RFC.8040.xml"?>
      <?rfc include="reference.RFC.8071.xml"?>
      <?rfc include="reference.RFC.8174.xml"?>
      <?rfc include="reference.I-D.ietf-netconf-keystore"?>
      <?rfc include="reference.I-D.kwatsen-netconf-tcp-client-server"?>
      <?rfc include="reference.I-D.ietf-netconf-tls-client-server"?>
      <?rfc include="reference.I-D.kwatsen-netconf-http-client-server"?>
    </references>

    <references title="Informative References">
      <?rfc include="reference.RFC.3688.xml"?>
      <?rfc include="reference.RFC.6241.xml"?>
      <?rfc include="reference.RFC.8340.xml"?>
      <?rfc include="reference.RFC.8341.xml"?>
      <?rfc include="reference.RFC.8446.xml"?>
      <?rfc include="reference.I-D.ietf-netconf-trust-anchors"?>
    </references>

    <section title="Expanded Tree Diagrams">
      <section title="Expanded Tree Diagram for 'ietf-restconf-client'" anchor="restconf-client-tree-expanded">
        <t>The following tree diagram <xref target="RFC8340"/> provides an
          overview of the data model for the "ietf-restconf-client" module.</t>
        <t>This tree diagram shows all the nodes defined in this module,
          including those defined by "grouping" statements used by this module.</t>
        <t>Please see <xref target="restconf-client-tree"/> for a tree
          diagram that illustrates what the module looks like without
          all the "grouping" statements expanded.</t>
        <t>
          <figure>
            <artwork><![CDATA[
INSERT_TEXT_FROM_FILE(refs/ietf-restconf-client-tree.txt)
]]></artwork>
          </figure>
        </t>
      </section>
      <section title="Expanded Tree Diagram for 'ietf-restconf-server'" anchor="restconf-server-tree-expanded">
        <t>The following tree diagram <xref target="RFC8340"/> provides an
          overview of the data model for the "ietf-restconf-server" module.</t>
        <t>This tree diagram shows all the nodes defined in this module,
          including those defined by "grouping" statements used by this module.</t>
        <t>Please see <xref target="restconf-server-tree"/> for a tree
          diagram that illustrates what the module looks like without
          all the "grouping" statements expanded.</t>
        <t>
          <figure>
            <artwork><![CDATA[
INSERT_TEXT_FROM_FILE(refs/ietf-restconf-server-tree.txt)
]]></artwork>
          </figure>
        </t>
      </section>
    </section>

    <section title="Change Log" anchor="change-log">
      <section title="00 to 01">
        <t>
          <list style="symbols">
            <t>Renamed "keychain" to "keystore".</t>
          </list>
        </t>
      </section>
      <section title="01 to 02">
        <t>
          <list style="symbols">
            <t>Filled in previously missing 'ietf-restconf-client' module.</t>
            <t>Updated the ietf-restconf-server module to accommodate new
            grouping 'ietf-tls-server-grouping'.</t>
          </list>
        </t>
      </section>
      <section title="02 to 03">
        <t>
          <list style="symbols">
            <t>Refined use of tls-client-grouping to add a must statement
               indicating that the TLS client must specify a client-certificate.</t>
            <t>Changed restconf-client??? to be a grouping (not a container).</t>
          </list>
        </t>
      </section>
      <section title="03 to 04">
        <t>
          <list style="symbols">
            <t>Added RFC 8174 to Requirements Language Section.</t>
            <t>Replaced refine statement in ietf-restconf-client
               to add a mandatory true.</t>
            <t>Added refine statement in ietf-restconf-server
               to add a must statement.</t>
            <t>Now there are containers and groupings, for both the
               client and server models.</t>
            <t>Now tree diagrams reference ietf-netmod-yang-tree-diagrams</t>
            <t>Updated examples to inline key and certificates (no longer 
               a leafref to keystore)</t>
          </list>
        </t>
      </section>
      <section title="04 to 05">
        <t>
          <list style="symbols">
            <t>Now tree diagrams reference ietf-netmod-yang-tree-diagrams</t>
            <t>Updated examples to inline key and certificates (no longer
               a leafref to keystore)</t>
          </list>
        </t>
      </section>
      <section title="05 to 06">
        <t>
          <list style="symbols">
            <t>Fixed change log missing section issue.</t>
            <t>Updated examples to match latest updates to the crypto-types,
               trust-anchors, and keystore drafts.</t>
            <t>Reduced line length of the YANG modules to fit within 69 columns.</t>
          </list>
        </t>
      </section>
      <section title="06 to 07">
        <t>
          <list style="symbols">
            <t>removed "idle-timeout" from "persistent" connection config.</t>
            <t>Added "random-selection" for reconnection-strategy's "starts-with" enum.</t>
            <t>Replaced "connection-type" choice default (persistent) with "mandatory true".</t>
            <t>Reduced the periodic-connection's "idle-timeout" from 5 to 2 minutes.</t>
            <t>Replaced reconnect-timeout with period/anchor-time combo.</t>
          </list>
        </t>
      </section>
      <section title="07 to 08">
        <t>
          <list style="symbols">
            <t>Modified examples to be compatible with new crypto-types algs</t>
          </list>
        </t>
      </section>
      <section title="08 to 09">
        <t>
          <list style="symbols">
            <t>Corrected use of "mandatory true" for "address" leafs.</t>
            <t>Updated examples to reflect update to groupings defined in the keystore draft.</t>
            <t>Updated to use groupings defined in new TCP and HTTP drafts.</t>
            <t>Updated copyright date, boilerplate template, affiliation, and folding algorithm.</t>
          </list>
        </t>
      </section>
      <section title="09 to 10">
        <t>
          <list style="symbols">
            <t>Reformatted YANG modules.</t>
          </list>
        </t>
      </section>
      <section title="10 to 11">
        <t>
          <list style="symbols">
              <t>Adjusted for the top-level "demux container" added to groupings
                imported from other modules.</t>
              <t>Added "must" expressions to ensure that keepalives are not configured
                for "periodic" connections.</t>
              <t>Updated the boilerplate text in module-level "description" statement
                to match copyeditor convention.</t>
              <t>Moved "expanded" tree diagrams to the Appendix.</t>
          </list>
        </t>
      </section>
      <section title="11 to 12">
        <t>
          <list style="symbols">
            <t>Removed the 'must' statement limiting keepalives in periodic
              connections.</t>
            <t>Updated models and examples to reflect removal of the "demux"
              containers in the imported models.</t>
            <t>Updated the "periodic-connnection" description statements to
              better describe behavior when connections are not closed
              gracefully.</t>
            <t>Updated text to better reference where certain examples come from
              (e.g., which Section in which draft).</t>
            <t>In the server model, commented out the "must 'pinned-ca-certs or 
              pinned-client-certs'" statement to reflect change made in the
              TLS draft whereby the trust anchors MAY be defined externally.</t>
            <t>Replaced the 'listen', 'initiate', and 'call-home' features
              with boolean expressions.</t>
          </list>
        </t>
      </section>
      <section title="12 to 13">
        <t>
          <list style="symbols">
            <t>Updated to reflect changes in trust-anchors drafts
              (e.g., s/trust-anchors/truststore/g + s/pinned.//)</t>
            <t>In ietf-restconf-server, Added 'http-listen' (not https-listen) choice, to support
              case when server is behind a TLS-terminator.</t>
            <t>Refactored server module to be more like other 'server' models.  If folks like it, will
              also apply to the client model, as well as to both the netconf client/server models.  Now
              the 'restconf-server-grouping' is just the RC-specific bits (i.e., the "demux" container
              minus the container), 'restconf-server-[listen|callhome]-stack-grouping' is the protocol
              stack for a single connection, and 'restconf-server-app-grouping' is effectively what
              was before (both listen+callhome for many inbound/outbound endpoints).</t>
          </list>
        </t>
      </section>
      <section title="13 to 14">
        <t>
          <list style="symbols">
            <t>Updated examples to reflect ietf-crypto-types change
              (e.g., identities --&gt; enumerations)</t>
            <t>Adjusting from change in TLS client model (removing the top-level
              'certificate' container).</t>
            <t>Added "external-endpoint" to the "http-listen" choice in ietf-restconf-server.</t>
          </list>
        </t>
      </section>
    </section>

    <section title="Acknowledgements" numbered="no">
      <t>The authors would like to thank for following for
      lively discussions on list and in the halls (ordered
      by first name):
      Alan Luchuk,
      Andy Bierman,
      Balázs Kovács,
      Benoit Claise,
      Bert Wijnen
      David Lamparter,
      Juergen Schoenwaelder,
      Ladislav Lhotka,
      Martin Bjorklund,
      Mehmet Ersue,
      Phil Shafer,
      Radek Krejci,
      Ramkumar Dhanapal,
      Sean Turner,
      and
      Tom Petch.</t>
    </section>

  </back>
</rfc>

